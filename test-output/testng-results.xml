<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="0" failed="1" skipped="2">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-03-24T17:34:47 IST" name="Default suite" finished-at="2024-03-24T17:35:28 IST" duration-ms="41539">
    <groups>
    </groups>
    <test started-at="2024-03-24T17:34:47 IST" name="Default test" finished-at="2024-03-24T17:35:28 IST" duration-ms="41539">
      <class name="TestPackage.Invite_Form">
        <test-method signature="loginTest(java.util.HashMap)[pri:0, instance:TestPackage.Invite_Form@7b36aa0c]" started-at="2024-03-24T17:34:48 IST" name="loginTest" data-provider="dataProvider" finished-at="2024-03-24T17:35:28 IST" duration-ms="40428" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{MotherPlaceOfWork=Failure, FatherMobileNumber=9281919119, ExpectedResult=Success, HusbandOccupation=motherName, MotherName=motherName, GaurdianAnnualIncome=Failure, HusbandPlaceOfWork=Failure, DateOfBirth=36892.0, EmailId=naman.goel@yoctel.com, PrimaryEmailId=primaryemail@gmail.com, QualificationName=Failure, GaurdianName=motherName, Runmode=Y, Grade=First, HusbandName=HusbandName, FatherOccupation=motherName, ProfilePicturePath=C:\Users\Naman Goel\Desktop\Error.png, MotherEmailId=motheremaild@gmail.com, SpecializationName=Specialization, FatherPlaceOfWork=Failure, Class=Failure, LastName=Last Name, Browser=Edge, PassingDate=36892.0, PrimaryAddress=primaryAddress, FatherAnnualIncome=Failure, PostalCode=123456, MotherOccupation=Failure, Marks=80, FatherEmailId=fatheremail@gmail.com, OtherQualification=Failure, GuardianEmailId=guardianemail@gmail.com, CourseType=Regular, GaurdianMobileNumber=9281919119, HusbandEmailId=husbandemail@gmail.com, Percentage=70, FirstName=First Name, Address2=Address2, Address1=Address1, MiddleName=Middle Name, CourseDuration=1, HusbandAnnualIncome=Failure, MobileNumber=9450101010, HusbandMobileNumber=9281919119, MotherMobileNumber=9281919119, InstitueName=Failure, FatherName=FatherName, MotherAnnualIncome=Failure}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:976)
at org.testng.Assert.assertEquals(Assert.java:1010)
at TestPackage.Invite_Form.loginTest(Invite_Form.java:129)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method is-config="true" signature="loginTest(java.util.HashMap)[pri:0, instance:TestPackage.Invite_Form@7b36aa0c]" started-at="2024-03-24T17:35:28 IST" name="loginTest" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1711281928851" status="FAIL">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Can inject only one of <ITestContext, XmlTest, Method, Object[], ITestResult> into a @AfterMethod annotated loginTest.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest, Method, Object[], ITestResult> into a @AfterMethod annotated loginTest.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection
at org.testng.internal.Parameters.checkParameterTypes(Parameters.java:436)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:350)
at org.testng.internal.Parameters.createParameters(Parameters.java:693)
at org.testng.internal.Parameters.createConfigurationParameters(Parameters.java:166)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:277)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:816)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:785)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:761)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method signature="loginTest(java.util.HashMap)[pri:0, instance:TestPackage.Invite_Form@7b36aa0c]" started-at="2024-03-24T17:35:28 IST" name="loginTest" data-provider="dataProvider" finished-at="2024-03-24T17:35:28 IST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[{MotherPlaceOfWork=, FatherMobileNumber=, ExpectedResult=Failure, HusbandOccupation=, MotherName=, GaurdianAnnualIncome=, HusbandPlaceOfWork=, DateOfBirth=1.2345678E7, EmailId=1.2345678E7, PrimaryEmailId=, QualificationName=, GaurdianName=, Runmode=N, Grade=, HusbandName=, FatherOccupation=, ProfilePicturePath=, MotherEmailId=, SpecializationName=, FatherPlaceOfWork=, Class=Failure, LastName=1.2345678E7, Browser=Firefox, PassingDate=, PrimaryAddress=, FatherAnnualIncome=, PostalCode=, MotherOccupation=, Marks=, FatherEmailId=, OtherQualification=Failure, GuardianEmailId=, CourseType=, GaurdianMobileNumber=, HusbandEmailId=, Percentage=, FirstName=558-18103, Address2=, Address1=, MiddleName=1.2345678E7, CourseDuration=, HusbandAnnualIncome=, MobileNumber=1.2345678E7, HusbandMobileNumber=, MotherMobileNumber=, InstitueName=, FatherName=, MotherAnnualIncome=}]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Can inject only one of <ITestContext, XmlTest, Method, Object[], ITestResult> into a @AfterMethod annotated loginTest.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest, Method, Object[], ITestResult> into a @AfterMethod annotated loginTest.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection
at org.testng.internal.Parameters.checkParameterTypes(Parameters.java:436)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:350)
at org.testng.internal.Parameters.createParameters(Parameters.java:693)
at org.testng.internal.Parameters.createConfigurationParameters(Parameters.java:166)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:277)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:816)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:785)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:761)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method is-config="true" signature="loginTest(java.util.HashMap)[pri:0, instance:TestPackage.Invite_Form@7b36aa0c]" started-at="2024-03-24T17:35:28 IST" name="loginTest" finished-at="2024-03-24T17:35:28 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method signature="loginTest(java.util.HashMap)[pri:0, instance:TestPackage.Invite_Form@7b36aa0c]" started-at="2024-03-24T17:35:28 IST" name="loginTest" data-provider="dataProvider" finished-at="2024-03-24T17:35:28 IST" duration-ms="1" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[{MotherPlaceOfWork=, FatherMobileNumber=, ExpectedResult=Success, HusbandOccupation=, MotherName=, GaurdianAnnualIncome=, HusbandPlaceOfWork=, DateOfBirth=1234567.0, EmailId=1234567.0, PrimaryEmailId=, QualificationName=, GaurdianName=, Runmode=N, Grade=, HusbandName=, FatherOccupation=, ProfilePicturePath=, MotherEmailId=, SpecializationName=, FatherPlaceOfWork=, Class=Success, LastName=1234567.0, Browser=Edge, PassingDate=, PrimaryAddress=, FatherAnnualIncome=, PostalCode=, MotherOccupation=, Marks=, FatherEmailId=, OtherQualification=Success, GuardianEmailId=, CourseType=, GaurdianMobileNumber=, HusbandEmailId=, Percentage=, FirstName=558-18106, Address2=, Address1=, MiddleName=1234567.0, CourseDuration=, HusbandAnnualIncome=, MobileNumber=1234567.0, HusbandMobileNumber=, MotherMobileNumber=, InstitueName=, FatherName=, MotherAnnualIncome=}]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Can inject only one of <ITestContext, XmlTest, Method, Object[], ITestResult> into a @AfterMethod annotated loginTest.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest, Method, Object[], ITestResult> into a @AfterMethod annotated loginTest.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection
at org.testng.internal.Parameters.checkParameterTypes(Parameters.java:436)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:350)
at org.testng.internal.Parameters.createParameters(Parameters.java:693)
at org.testng.internal.Parameters.createConfigurationParameters(Parameters.java:166)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:277)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:816)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:785)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:761)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method is-config="true" signature="loginTest(java.util.HashMap)[pri:0, instance:TestPackage.Invite_Form@7b36aa0c]" started-at="2024-03-24T17:35:28 IST" name="loginTest" finished-at="2024-03-24T17:35:28 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
      </class> <!-- TestPackage.Invite_Form -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
